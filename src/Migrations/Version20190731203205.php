<?php

declare(strict_types=1);

namespace DoctrineMigrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

/**
 * Auto-generated Migration: Please modify to your needs!
 */
final class Version20190731203205 extends AbstractMigration
{

    /**
     * @return string
     */
    public function getDescription() : string
    {
        return '';
    }

    /**
     * @param  Schema  $schema
     *
     * @throws \Doctrine\DBAL\DBALException
     */
    public function up(Schema $schema) : void
    {
        // this up() migration is auto-generated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('CREATE TABLE association (association_id INT UNSIGNED AUTO_INCREMENT NOT NULL COMMENT \'Primary Key to Association\', company_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Company\', management_company_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Company\', number_of_properties INT UNSIGNED DEFAULT 1 NOT NULL COMMENT \'Number of Properties in Association\', number_of_sections INT UNSIGNED DEFAULT 1 NOT NULL COMMENT \'Number of Neighborhood Sections\', updated_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when updated\', created_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when inserted\', is_active TINYINT(1) DEFAULT \'1\' NOT NULL COMMENT \'Is this Record Active\', INDEX idx_fk_association_company_to_company (company_id), INDEX idx_fk_association_management_co_to_company (management_company_id), PRIMARY KEY(association_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Associations\' ');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('CREATE TABLE association_staff (association_staff_id INT UNSIGNED AUTO_INCREMENT NOT NULL COMMENT \'Primary Key to Association_Staff\', association_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Association\', person_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Person\', job_title CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Job Title or Description\', is_attorney TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'Is Staff Member Association Counsel\', is_board_member TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'Is This Staff Member Also a Board Member?\', date_start DATETIME DEFAULT \'NULL\' COMMENT \'Date Start\', date_end DATETIME DEFAULT \'NULL\' COMMENT \'Date End\', updated_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when updated\', created_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when inserted\', is_active TINYINT(1) DEFAULT \'1\' NOT NULL COMMENT \'flag if record is active\', UNIQUE INDEX un_idx_hoa_staff_member_combined (association_id, person_id), INDEX fk_hoa_staff_member_to_person (person_id), INDEX idx_fk_fk_hoa_staff_member_to_association (association_id), PRIMARY KEY(association_staff_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Staff of Persons who work for an Association\' ');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('CREATE TABLE ballot (ballot_id INT UNSIGNED AUTO_INCREMENT NOT NULL COMMENT \'Primary Key to Ballot\', voter_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Voter\', ballot_type_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Ballot_Type\', ballot_key CHAR(64) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Key to Transfer a Ballot to a Proxy\', ip_address CHAR(15) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'IP Address that ballot was cast from.\', url_online_ballot CHAR(255) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'URL Link to get Online Ballot\', url_paper_ballot CHAR(255) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'URL Link to get Pdf Ballot \', url_paper_trace CHAR(255) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'URL Link to get The Hard Copy of The Ballot\', date_cast DATETIME DEFAULT \'NULL\' COMMENT \'Date and Time Ballot was Cast\', prior_ballot_id INT UNSIGNED DEFAULT NULL COMMENT \'Prior Ballot ID (Self Referencing)\', updated_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when updated\', created_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when inserted\', is_active TINYINT(1) DEFAULT \'1\' NOT NULL COMMENT \'Is this Record Active\', INDEX fk_idx_ballot_ballot_type_id (ballot_type_id), UNIQUE INDEX un_idx_ballot_ballot_id (voter_id), PRIMARY KEY(ballot_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Ballots\' ');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('CREATE TABLE ballot_type (ballot_type_id INT UNSIGNED AUTO_INCREMENT NOT NULL COMMENT \'Primary Key to Ballot_Type\', ballot_type CHAR(128) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Description of a Ballot Type.  (Ie, Electronic, Proxy, etc.)\', url_ballot_type CHAR(255) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'URL Link to get to Page Describing The Ballot Type\', html_ballot_type TEXT DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Html Describing The Ballot Type\', updated_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when updated\', created_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when inserted\', is_active TINYINT(1) DEFAULT \'1\' NOT NULL COMMENT \'Is this Record Active\', PRIMARY KEY(ballot_type_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Types of ballots\' ');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('CREATE TABLE candidate (candidate_id INT UNSIGNED AUTO_INCREMENT NOT NULL COMMENT \'Primary Key to Candidate\', election_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Election\', write_in_by_voter_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Voter\', is_write_in TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'Is a Write in Vote\', name_display CHAR(108) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Display Name\', name_first CHAR(32) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'First Name\', name_middle CHAR(32) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Middle Name\', name_last CHAR(32) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Last Name\', name_suffix CHAR(12) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Suffix\', physical_address_line1 CHAR(128) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Address Line 1\', physical_address_line2 CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Address Line 2\', physical_address_city CHAR(128) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'City\', physical_address_state CHAR(2) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'State\', physical_address_zip_code CHAR(16) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Zip Code\', phone_mobile CHAR(14) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Mobile Phone\', email_address CHAR(128) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Email Address\', display_candidate_address TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'Display The Candidates Address\', share_write_in_name TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'Does The Voter Want to Share The Name of The Write in They Have Entered\', updated_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when updated\', created_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when inserted\', is_active TINYINT(1) DEFAULT \'1\' NOT NULL COMMENT \'Is this Record Active\', INDEX idx_candidate_name_display (name_display), INDEX idx_candidate_name_last (name_last), INDEX fk_idx_candidate_election_id (election_id), PRIMARY KEY(candidate_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Candidates in an Election\' ');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('CREATE TABLE company (company_id INT UNSIGNED AUTO_INCREMENT NOT NULL COMMENT \'Primary Key to Company\', person_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Person\', company_name CHAR(128) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Company Name\', physical_address_line1 CHAR(128) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Address Line 1\', physical_address_line2 CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Address Line 2\', physical_address_city CHAR(128) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'City\', physical_address_state CHAR(2) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'State\', physical_address_zip_code CHAR(16) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Zip Code\', mailing_address_line1 CHAR(128) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Address Line 1\', mailing_address_line2 CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Address Line 2\', mailing_address_city CHAR(128) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'City\', mailing_address_state CHAR(2) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'State\', mailing_address_zip_code CHAR(16) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Zip Code\', billing_address_line1 CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Address Line 1\', billing_address_line2 CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Address Line 2\', billing_address_city CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'City\', billing_address_state CHAR(2) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'State\', billing_address_zip_code CHAR(16) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Zip Code\', phone_fax CHAR(14) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Fax Phone\', phone_work CHAR(14) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Company Phone\', url CHAR(255) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'URL of Company Web Site\', updated_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when updated\', created_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when inserted\', is_active TINYINT(1) DEFAULT \'1\' NOT NULL COMMENT \'Is this Record Active\', INDEX idx_company_physical_address_zip_code (physical_address_zip_code), INDEX idx_company_company_name (company_name), INDEX idx_company_billing_address_zip_code (billing_address_zip_code), INDEX idx_company_person_id (person_id), INDEX idx_company_mailing_address_zip_code (mailing_address_zip_code), PRIMARY KEY(company_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Company type entities.\' ');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('CREATE TABLE election (election_id INT UNSIGNED AUTO_INCREMENT NOT NULL COMMENT \'Primary Key to Election\', association_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Association\', election_type_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Election_Type\', election_name_heading CHAR(128) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Election Description Heading\', election_name_subheading CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Election Description Sub-Heading\', url_election CHAR(255) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'URL Link to get to Page Describing The Election\', html_election_information TEXT NOT NULL COLLATE utf8mb4_general_ci COMMENT \'HTML Describing The Election\', physical_address_line1 CHAR(128) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Address Line 1\', physical_address_line2 CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Address Line 2\', physical_address_city CHAR(128) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'City\', physical_address_state CHAR(2) DEFAULT \'\'TX\'\' NOT NULL COLLATE utf8mb4_general_ci COMMENT \'State\', physical_address_zip_code CHAR(16) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Zip Code\', display_physical_address TINYINT(1) DEFAULT \'1\' NOT NULL COMMENT \'Display The Physical Address\', mailing_address_line1 CHAR(128) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Address Line 1\', mailing_address_line2 CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Address Line 2\', mailing_address_city CHAR(128) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'City\', mailing_address_state CHAR(2) DEFAULT \'\'TX\'\' NOT NULL COLLATE utf8mb4_general_ci COMMENT \'State\', mailing_address_zip_code CHAR(16) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Zip Code\', display_mailing_address TINYINT(1) DEFAULT \'1\' NOT NULL COMMENT \'Display The Mailing Address\', votes_min SMALLINT UNSIGNED NOT NULL COMMENT \'Minimum Number of Votes that can be Cast\', votes_max SMALLINT UNSIGNED NOT NULL COMMENT \'Maximum Number of Votes that can be Cast\', date_start DATETIME NOT NULL COMMENT \'Date and Time When Voting Starts\', date_end DATETIME NOT NULL COMMENT \'Date and Time When Voting Ends\', voters_total INT UNSIGNED NOT NULL COMMENT \'Total Number of Voters.\', voters_required_election INT UNSIGNED NOT NULL COMMENT \'Total Number of Votes Required to Make This Election Official\', voters_required_ratification INT UNSIGNED NOT NULL COMMENT \'Number of Voters Required to Ratify a Bylaw Or a Deed Restriction\', votes_min_per_bylaws SMALLINT UNSIGNED NOT NULL COMMENT \'Minimum Number of Votes that can be Cast per Bylaws\', votes_min_per_statute SMALLINT UNSIGNED NOT NULL COMMENT \'Minimum Number of Votes that can be Cast per Statute\', election_state CHAR(2) DEFAULT \'\'TX\'\' NOT NULL COLLATE utf8mb4_general_ci COMMENT \'State\', allow_write_in_candidates TINYINT(1) DEFAULT \'0\' COMMENT \'Will You Allow Write in Candidates?\', allow_proxy_voting TINYINT(1) DEFAULT \'1\' COMMENT \'Will You Allow Proxy Voting?\', allow_proxy_directed TINYINT(1) DEFAULT \'0\' COMMENT \'Will This Election Use Directed Proxies?\', allow_proxy_nondirected TINYINT(1) DEFAULT \'0\' COMMENT \'Will This Election Use Non-Directed Proxies?\', updated_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when updated\', created_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when inserted\', is_active TINYINT(1) DEFAULT \'1\' NOT NULL COMMENT \'Is this Record Active\', INDEX idx_election_date_end (date_end), INDEX idx_election_date_start (date_start), INDEX fk_idx_election_association_id (association_id), INDEX idx_fk_fk_election_to_election_type (election_type_id), PRIMARY KEY(election_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Election Events\' ');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('CREATE TABLE election_date (election_date_id INT UNSIGNED AUTO_INCREMENT NOT NULL COMMENT \'Primary Key to Election_Date\', election_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Election\', date_value DATETIME NOT NULL COMMENT \'Date and Time of Election\', date_label VARCHAR(512) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Label to Display With Date\', updated_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when updated\', created_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when inserted\', is_active TINYINT(1) DEFAULT \'1\' NOT NULL COMMENT \'Is this Record Active\', INDEX idx_election_date_dates_and_election_id (election_id, date_label), INDEX fk_idx_election_date_election_id (election_id), PRIMARY KEY(election_date_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Election Dates\' ');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('CREATE TABLE election_type (election_type_id INT UNSIGNED AUTO_INCREMENT NOT NULL COMMENT \'Primary Key to Election_Type\', election_type TEXT NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Description of Election Type\', url_election_type CHAR(255) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'URL Link to get to Page Describing The Election\', html_election_type TEXT DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Html Describing The Election Type\', updated_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when updated\', created_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when inserted\', is_active TINYINT(1) DEFAULT \'1\' NOT NULL COMMENT \'Is this Record Active\', PRIMARY KEY(election_type_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Election Types\' ');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('CREATE TABLE person (id INT UNSIGNED AUTO_INCREMENT NOT NULL COMMENT \'Primary Key to Person\', person_type_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Person_Type\', name_display CHAR(108) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Display Name\', name_first CHAR(32) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'First Name\', name_middle CHAR(32) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Middle Name\', name_last CHAR(32) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Last Name\', name_suffix CHAR(12) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Suffix\', phone_home CHAR(14) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Home Phone\', phone_mobile CHAR(14) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Mobile Phone\', phone_fax CHAR(14) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Fax Phone\', phone_work CHAR(14) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Work Phone\', email VARCHAR(180) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Email Address\', roles LONGTEXT DEFAULT NULL COLLATE utf8mb4_bin COMMENT \'Roles User Holds\', password VARCHAR(255) DEFAULT \'NULL\' COLLATE utf8mb4_unicode_ci COMMENT \'This is NULL because non-user objects will also be stored within.\', mailing_address_line1 CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Address Line 1\', mailing_address_line2 CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Address Line 2\', mailing_address_city CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'City\', mailing_address_state CHAR(2) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'State\', mailing_address_zip_code CHAR(16) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Zip Code\', mailing_address_country CHAR(2) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Country\', physical_address_line1 CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Address Line 1\', physical_address_line2 CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Address Line 2\', physical_address_city CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'City\', physical_address_state CHAR(2) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'State\', physical_address_zip_code CHAR(16) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Zip Code\', ip_address CHAR(39) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'ip address where the Person was submitted from.\', password_recovery_key CHAR(32) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Key to be included in password recovery.\', password_recovery_date DATETIME DEFAULT \'NULL\' COMMENT \'Date password recovery was made.\', password_recovery_ip_address CHAR(39) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'IP Address where the password request was made.\', verification_key CHAR(32) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Key to be included in email verification.\', verification_date DATETIME DEFAULT \'NULL\' COMMENT \'Verification Date of Email\', verification_ip_address CHAR(39) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'IP Address where the verification was made from.\', has_started_registration TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'Has this person started registration?\', is_verified TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'Is Email Address Verified\', is_registered TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'Is Person Registered\', agreed_to_terms_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when the user agreed to terms\', terms_id INT UNSIGNED DEFAULT 1 COMMENT \'Future Foreign Key field to more complex legal framework.\', updated_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when updated\', created_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when inserted\', is_active TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'Is this Record Active\', INDEX idx_person_phone_mobile (phone_mobile), INDEX fk_person_to_person_type (person_type_id), INDEX idx_person_email (email), INDEX idx_person_name_first (name_first), INDEX idx_person_verification_key (verification_key), INDEX idx_person_phone_work (phone_work), INDEX idx_person_name_last (name_last), INDEX idx_person_created_at (created_at), INDEX idx_person_phone_home (phone_home), INDEX idx_person_password_recovery_key (password_recovery_key), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Defines a Person as an Entity Type\' ');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('CREATE TABLE person_type (person_type_id INT UNSIGNED AUTO_INCREMENT NOT NULL COMMENT \'Primary Key to Person_Type\', person_type_key TEXT NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Long Description of Person Type\', person_type_value CHAR(255) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Short Description of Person Type\', updated_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when updated\', created_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when inserted\', is_active TINYINT(1) DEFAULT \'1\' NOT NULL COMMENT \'Is this Record Active\', PRIMARY KEY(person_type_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Person Types for Registration\' ');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('CREATE TABLE property (property_id INT UNSIGNED AUTO_INCREMENT NOT NULL COMMENT \'Primary Key to Property\', owner_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Owner\', association_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Association\', ext_hoa_property_id CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'External Key From Internal Association System\', ext_cad_property_id CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'External Key From County Appraisal District\', date_start DATETIME NOT NULL COMMENT \'Date Ownership Started\', date_end DATETIME DEFAULT \'NULL\' COMMENT \'Date Ownership Ended\', physical_address_line1 CHAR(128) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Address Line 1\', physical_address_line2 CHAR(128) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Address Line 2\', physical_address_city CHAR(128) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'City\', physical_address_state CHAR(2) DEFAULT \'\'TX\'\' NOT NULL COLLATE utf8mb4_general_ci COMMENT \'State\', physical_address_zip_code CHAR(16) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Zip Code\', legal_lot CHAR(32) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Legal Description Lot\', legal_section CHAR(32) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Legal Description Section\', legal_block CHAR(32) DEFAULT \'NULL\' COLLATE utf8mb4_general_ci COMMENT \'Legal Description Block\', legal_description TEXT DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Full Legal Description\', updated_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when updated\', created_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when inserted\', is_active TINYINT(1) DEFAULT \'1\' NOT NULL COMMENT \'Is this Record Active\', INDEX fk_idx_property_to_owner (owner_id), INDEX idx_property_ext_cad_property_id (ext_cad_property_id), INDEX idx_property_ext_hoa_property_id (ext_hoa_property_id), INDEX fk_property_to_association (association_id), PRIMARY KEY(property_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Defines the Property as an Entity Type\' ');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('CREATE TABLE sessions (sess_id VARCHAR(128) NOT NULL COLLATE utf8_bin, sess_data BLOB NOT NULL, sess_time INT UNSIGNED NOT NULL, sess_lifetime INT NOT NULL, PRIMARY KEY(sess_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Symfony Sessions Table\' ');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('CREATE TABLE upload (upload_id INT UNSIGNED AUTO_INCREMENT NOT NULL COMMENT \'Primary Key to Uploads\', uploaded_by INT UNSIGNED NOT NULL COMMENT \'Foreign Key to Person\', file_path CHAR(128) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'File Path\', file_name CHAR(64) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'File Name\', file_extension CHAR(4) NOT NULL COLLATE utf8mb4_general_ci COMMENT \'File Extension\', file_size INT UNSIGNED DEFAULT NULL COMMENT \'Size of The File (In Bytes)\', is_image TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'Is File An Image\', image_width INT UNSIGNED DEFAULT NULL COMMENT \'Image Width\', image_height INT UNSIGNED DEFAULT NULL COMMENT \'Image Height\', updated_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when updated\', created_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when inserted\', is_active TINYINT(1) DEFAULT \'1\' NOT NULL COMMENT \'Is this Record Active\', PRIMARY KEY(upload_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Contains the uploaded file information\' ');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('CREATE TABLE vote (ballot_id INT UNSIGNED NOT NULL COMMENT \'Duplex Primary Key For Vote - Ballot Id\', candidate_id INT UNSIGNED NOT NULL COMMENT \'Duplex Primary Key For Vote - Candidate Id\', INDEX idx_fk_relationship6 (candidate_id), INDEX idx_fk_relationship5 (ballot_id), PRIMARY KEY(ballot_id, candidate_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Contains the Votes Cast\' ');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('CREATE TABLE voter (voter_id INT UNSIGNED AUTO_INCREMENT NOT NULL COMMENT \'Primary Key to Voter\', property_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Property\', election_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Election\', proxy_person_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Person\', is_proxy TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'Is This Voter a Proxy For Another Homeowner\', updated_by_person_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Person (Soft and who Imported The Data)\', created_by_person_id INT UNSIGNED DEFAULT NULL COMMENT \'Foreign Key to Person (Soft and who Imported The Data)\', memorandum TEXT DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Memorandum on Voter\', updated_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when updated\', created_at DATETIME DEFAULT \'NULL\' COMMENT \'PHP Timestamp when inserted\', is_active TINYINT(1) DEFAULT \'1\' NOT NULL COMMENT \'Is this Record Active\', INDEX fk_idx_voter_property_id (property_id), INDEX fk_voter_to_proxy_person_id (proxy_person_id), UNIQUE INDEX un_idx_voter_combined (property_id, election_id), INDEX fk_idx_voter_election_id (election_id), PRIMARY KEY(voter_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Defines the Persons who are allowed to vote.\' ');
    }

    /**
     * @param  Schema  $schema
     *
     * @throws \Doctrine\DBAL\DBALException
     */
    /**
     * @param  Schema  $schema
     *
     * @throws \Doctrine\DBAL\DBALException
     */
    /**
     * @param  Schema  $schema
     *
     * @throws \Doctrine\DBAL\DBALException
     */
    /**
     * @param  Schema  $schema
     *
     * @throws \Doctrine\DBAL\DBALException
     */
    public function down(Schema $schema) : void
    {
        // this down() migration is auto-generated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('DROP TABLE association');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('DROP TABLE association_staff');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('DROP TABLE ballot');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('DROP TABLE ballot_type');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('DROP TABLE candidate');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('DROP TABLE company');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('DROP TABLE election');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('DROP TABLE election_date');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('DROP TABLE election_type');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('DROP TABLE person');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('DROP TABLE person_type');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('DROP TABLE property');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('DROP TABLE sessions');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('DROP TABLE upload');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('DROP TABLE vote');
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('DROP TABLE voter');
    }
}
